/* Generated By:JJTree&JavaCC: Do not edit this line. JavaParserTokenManager.java */
package org.acm.seguin.parser;
/**
 * The token generator for the parser
 *
 * @author Chris Seguin
 */
public class JavaParserTokenManager implements org.acm.seguin.parser.JavaParserConstants {
    /**
     * Description of the Field
     */
    public static final java.lang.String[] jjstrLiteralImages = new java.lang.String[]{ "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "default", "do", "double", "else", "extends", "false", "final", "finally", "float", "for", "goto", "if", "implements", "import", "instanceof", "int", "interface", "long", "native", "new", "null", "package", "private", "protected", "public", "return", "short", "static", "strictfp", "super", "switch", "synchronized", "this", "throw", "throws", "transient", "true", "try", "void", "volatile", "while", null, null, null, null, null, null, null, null, null, null, null, "(", ")", "{", "}", "[", "]", ";", ",", ".", "=", ">", "<", "!", "~", "?", ":", "==", "<=", ">=", "!=", "||", "&&", "++", "--", "+", "-", "*", "/", "&", "|", "^", "%", "<<", ">>", ">>>", "+=", "-=", "*=", "/=", "&=", "|=", "^=", "%=", "<<=", ">>=", ">>>=" };

    /**
     * Description of the Field
     */
    public static final java.lang.String[] lexStateNames = new java.lang.String[]{ "DEFAULT", "IN_SINGLE_LINE_COMMENT", "IN_FORMAL_COMMENT", "IN_MULTI_LINE_COMMENT", "IN_CATEGORY_COMMENT" };

    /**
     * Description of the Field
     */
    public static final int[] jjnewLexState = new int[]{ -1, -1, -1, -1, -1, -1, -1, 1, 2, 3, 4, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };

    /**
     * Description of the Field
     */
    protected static char curChar;

    static final long[] jjbitVec0 = new long[]{ 0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL };

    static final long[] jjbitVec1 = new long[]{ 0x1ff00000fffffffeL, 0xffffffffffffc000L, 0xffffffffL, 0x600000000000000L };

    static final long[] jjbitVec3 = new long[]{ 0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL };

    static final long[] jjbitVec4 = new long[]{ 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL };

    static final long[] jjbitVec5 = new long[]{ 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffL, 0x0L };

    static final long[] jjbitVec6 = new long[]{ 0xffffffffffffffffL, 0xffffffffffffffffL, 0x0L, 0x0L };

    static final long[] jjbitVec7 = new long[]{ 0x3fffffffffffL, 0x0L, 0x0L, 0x0L };

    static final int[] jjnextStates = new int[]{ 46, 47, 52, 53, 56, 57, 12, 29, 30, 37, 38, 14, 16, 27, 61, 63, 6, 8, 9, 12, 29, 30, 40, 37, 38, 48, 49, 12, 56, 57, 12, 10, 11, 17, 18, 20, 31, 39, 41, 50, 51, 54, 55, 58, 59 };

    static final long[] jjtoToken = new long[]{ 0xffffffffffff0001L, 0xfffffffffffce8fL };

    static final long[] jjtoSkip = new long[]{ 0x787eL, 0x0L };

    static final long[] jjtoSpecial = new long[]{ 0x7870L, 0x0L };

    static final long[] jjtoMore = new long[]{ 0x8780L, 0x0L };

    static java.lang.StringBuffer image;

    static int jjimageLen;

    static int lengthOfMatch;

    static int curLexState = 0;

    static int defaultLexState = 0;

    static int jjnewStateCnt;

    static int jjround;

    static int jjmatchedPos;

    static int jjmatchedKind;

    private static org.acm.seguin.parser.io.CharStream input_stream;

    private static final int[] jjrounds = new int[64];

    private static final int[] jjstateSet = new int[128];

    /**
     * Constructor for the JavaParserTokenManager object
     *
     * @param stream
     * 		Description of Parameter
     */
    public JavaParserTokenManager(org.acm.seguin.parser.io.CharStream stream) {
        if (org.acm.seguin.parser.JavaParserTokenManager.input_stream != null) {
            throw new org.acm.seguin.parser.TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", org.acm.seguin.parser.TokenMgrError.STATIC_LEXER_ERROR);
        }
        org.acm.seguin.parser.JavaParserTokenManager.input_stream = stream;
    }

    /**
     * Constructor for the JavaParserTokenManager object
     *
     * @param stream
     * 		Description of Parameter
     * @param lexState
     * 		Description of Parameter
     */
    public JavaParserTokenManager(org.acm.seguin.parser.io.CharStream stream, int lexState) {
        this(stream);
        org.acm.seguin.parser.JavaParserTokenManager.SwitchTo(lexState);
    }

    /**
     * Gets the NextToken attribute of the JavaParserTokenManager class
     *
     * @return The NextToken value
     */
    public static final org.acm.seguin.parser.Token getNextToken() {
        int kind;
        org.acm.seguin.parser.Token specialToken = null;
        org.acm.seguin.parser.Token matchedToken;
        int curPos = 0;
        EOFLoop : for (; ;) {
            try {
                org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.BeginToken();
            } catch (java.io.IOException e) {
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 0;
                matchedToken = org.acm.seguin.parser.JavaParserTokenManager.jjFillToken();
                matchedToken.specialToken = specialToken;
                return matchedToken;
            }
            org.acm.seguin.parser.JavaParserTokenManager.image = null;
            org.acm.seguin.parser.JavaParserTokenManager.jjimageLen = 0;
            for (; ;) {
                switch (org.acm.seguin.parser.JavaParserTokenManager.curLexState) {
                    case 0 :
                        try {
                            org.acm.seguin.parser.JavaParserTokenManager.input_stream.backup(0);
                            while ((org.acm.seguin.parser.JavaParserTokenManager.curChar <= 32) && ((0x100001200L & (1L << org.acm.seguin.parser.JavaParserTokenManager.curChar)) != 0L)) {
                                org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.BeginToken();
                            } 
                        } catch (java.io.IOException e1) {
                            continue EOFLoop;
                        }
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 0x7fffffff;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 0;
                        curPos = org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa0_0();
                        break;
                    case 1 :
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 0x7fffffff;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 0;
                        curPos = org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa0_1();
                        if ((org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos == 0) && (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind > 15)) {
                            org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 15;
                        }
                        break;
                    case 2 :
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 0x7fffffff;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 0;
                        curPos = org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa0_2();
                        if ((org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos == 0) && (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind > 15)) {
                            org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 15;
                        }
                        break;
                    case 3 :
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 0x7fffffff;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 0;
                        curPos = org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa0_3();
                        if ((org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos == 0) && (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind > 15)) {
                            org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 15;
                        }
                        break;
                    case 4 :
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 0x7fffffff;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 0;
                        curPos = org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa0_4();
                        if ((org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos == 0) && (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind > 15)) {
                            org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 15;
                        }
                        break;
                }
                if (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind != 0x7fffffff) {
                    if ((org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos + 1) < curPos) {
                        org.acm.seguin.parser.JavaParserTokenManager.input_stream.backup((curPos - org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos) - 1);
                    }
                    if ((org.acm.seguin.parser.JavaParserTokenManager.jjtoToken[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind >> 6] & (1L << (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind & 077))) != 0L) {
                        matchedToken = org.acm.seguin.parser.JavaParserTokenManager.jjFillToken();
                        matchedToken.specialToken = specialToken;
                        if (org.acm.seguin.parser.JavaParserTokenManager.jjnewLexState[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind] != (-1)) {
                            org.acm.seguin.parser.JavaParserTokenManager.curLexState = org.acm.seguin.parser.JavaParserTokenManager.jjnewLexState[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind];
                        }
                        return matchedToken;
                    } else if ((org.acm.seguin.parser.JavaParserTokenManager.jjtoSkip[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind >> 6] & (1L << (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind & 077))) != 0L) {
                        if ((org.acm.seguin.parser.JavaParserTokenManager.jjtoSpecial[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind >> 6] & (1L << (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind & 077))) != 0L) {
                            matchedToken = org.acm.seguin.parser.JavaParserTokenManager.jjFillToken();
                            if (specialToken == null) {
                                specialToken = matchedToken;
                            } else {
                                matchedToken.specialToken = specialToken;
                                specialToken = specialToken.next = matchedToken;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.SkipLexicalActions(matchedToken);
                        } else {
                            org.acm.seguin.parser.JavaParserTokenManager.SkipLexicalActions(null);
                        }
                        if (org.acm.seguin.parser.JavaParserTokenManager.jjnewLexState[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind] != (-1)) {
                            org.acm.seguin.parser.JavaParserTokenManager.curLexState = org.acm.seguin.parser.JavaParserTokenManager.jjnewLexState[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind];
                        }
                        continue EOFLoop;
                    }
                    org.acm.seguin.parser.JavaParserTokenManager.MoreLexicalActions();
                    if (org.acm.seguin.parser.JavaParserTokenManager.jjnewLexState[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind] != (-1)) {
                        org.acm.seguin.parser.JavaParserTokenManager.curLexState = org.acm.seguin.parser.JavaParserTokenManager.jjnewLexState[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind];
                    }
                    curPos = 0;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 0x7fffffff;
                    try {
                        org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
                        continue;
                    } catch (java.io.IOException e1) {
                    }
                }
                int error_line = org.acm.seguin.parser.JavaParserTokenManager.input_stream.getEndLine();
                int error_column = org.acm.seguin.parser.JavaParserTokenManager.input_stream.getEndColumn();
                java.lang.String error_after = null;
                boolean EOFSeen = false;
                try {
                    org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
                    org.acm.seguin.parser.JavaParserTokenManager.input_stream.backup(1);
                } catch (java.io.IOException e1) {
                    EOFSeen = true;
                    error_after = (curPos <= 1) ? "" : org.acm.seguin.parser.JavaParserTokenManager.input_stream.GetImage();
                    if ((org.acm.seguin.parser.JavaParserTokenManager.curChar == '\n') || (org.acm.seguin.parser.JavaParserTokenManager.curChar == '\r')) {
                        error_line++;
                        error_column = 0;
                    } else {
                        error_column++;
                    }
                }
                if (!EOFSeen) {
                    org.acm.seguin.parser.JavaParserTokenManager.input_stream.backup(1);
                    error_after = (curPos <= 1) ? "" : org.acm.seguin.parser.JavaParserTokenManager.input_stream.GetImage();
                } else {
                    org.acm.seguin.parser.Token result = new org.acm.seguin.parser.Token();
                    result.kind = org.acm.seguin.parser.JavaParserConstants.EOF;
                    return result;
                }
                throw new org.acm.seguin.parser.TokenMgrError(EOFSeen, org.acm.seguin.parser.JavaParserTokenManager.curLexState, error_line, error_column, error_after, org.acm.seguin.parser.JavaParserTokenManager.curChar, org.acm.seguin.parser.TokenMgrError.LEXICAL_ERROR);
            }
        }
    }

    /**
     * Description of the Method
     *
     * @param stream
     * 		Description of Parameter
     */
    public static void ReInit(org.acm.seguin.parser.io.CharStream stream) {
        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt = 0;
        org.acm.seguin.parser.JavaParserTokenManager.curLexState = org.acm.seguin.parser.JavaParserTokenManager.defaultLexState;
        org.acm.seguin.parser.JavaParserTokenManager.input_stream = stream;
        org.acm.seguin.parser.JavaParserTokenManager.ReInitRounds();
    }

    /**
     * Description of the Method
     *
     * @param stream
     * 		Description of Parameter
     * @param lexState
     * 		Description of Parameter
     */
    public static void ReInit(org.acm.seguin.parser.io.CharStream stream, int lexState) {
        org.acm.seguin.parser.JavaParserTokenManager.ReInit(stream);
        org.acm.seguin.parser.JavaParserTokenManager.SwitchTo(lexState);
    }

    /**
     * Description of the Method
     *
     * @param lexState
     * 		Description of Parameter
     */
    public static void SwitchTo(int lexState) {
        if ((lexState >= 5) || (lexState < 0)) {
            throw new org.acm.seguin.parser.TokenMgrError(("Error: Ignoring invalid lexical state : " + lexState) + ". State unchanged.", org.acm.seguin.parser.TokenMgrError.INVALID_LEXICAL_STATE);
        } else {
            org.acm.seguin.parser.JavaParserTokenManager.curLexState = lexState;
        }
    }

    /**
     * Description of the Method
     *
     * @param matchedToken
     * 		Description of Parameter
     */
    static final void SkipLexicalActions(org.acm.seguin.parser.Token matchedToken) {
        switch (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind) {
            default :
                break;
        }
    }

    /**
     * Description of the Method
     */
    static final void MoreLexicalActions() {
        org.acm.seguin.parser.JavaParserTokenManager.jjimageLen += org.acm.seguin.parser.JavaParserTokenManager.lengthOfMatch = org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos + 1;
        switch (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind) {
            case 8 :
                if (org.acm.seguin.parser.JavaParserTokenManager.image == null) {
                    org.acm.seguin.parser.JavaParserTokenManager.image = new java.lang.StringBuffer(new java.lang.String(org.acm.seguin.parser.JavaParserTokenManager.input_stream.GetSuffix(org.acm.seguin.parser.JavaParserTokenManager.jjimageLen)));
                } else {
                    org.acm.seguin.parser.JavaParserTokenManager.image.append(new java.lang.String(org.acm.seguin.parser.JavaParserTokenManager.input_stream.GetSuffix(org.acm.seguin.parser.JavaParserTokenManager.jjimageLen)));
                }
                org.acm.seguin.parser.JavaParserTokenManager.jjimageLen = 0;
                org.acm.seguin.parser.JavaParserTokenManager.input_stream.backup(1);
                break;
            default :
                break;
        }
    }

    /**
     * Description of the Method
     *
     * @param pos
     * 		Description of Parameter
     * @param kind
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjStopAtPos(int pos, int kind) {
        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = kind;
        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = pos;
        return pos + 1;
    }

    /**
     * Description of the Method
     *
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa0_4() {
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 62 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_4(0x4000L);
            default :
                return 1;
        }
    }

    /**
     * Description of the Method
     *
     * @param active0
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa1_4(long active0) {
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            return 1;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 42 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_4(active0, 0x4000L);
            default :
                return 2;
        }
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa2_4(long old0, long active0) {
        if ((active0 &= old0) == 0L) {
            return 2;
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            return 2;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 47 :
                if ((active0 & 0x4000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(2, 14);
                }
                break;
            default :
                return 3;
        }
        return 3;
    }

    /**
     * Description of the Method
     *
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa0_3() {
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 42 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_3(0x2000L);
            default :
                return 1;
        }
    }

    /**
     * Description of the Method
     *
     * @param active0
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa1_3(long active0) {
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            return 1;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 47 :
                if ((active0 & 0x2000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 13);
                }
                break;
            default :
                return 2;
        }
        return 2;
    }

    /**
     * Description of the Method
     *
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa0_2() {
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 42 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_2(0x1000L);
            default :
                return 1;
        }
    }

    /**
     * Description of the Method
     *
     * @param active0
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa1_2(long active0) {
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            return 1;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 47 :
                if ((active0 & 0x1000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 12);
                }
                break;
            default :
                return 2;
        }
        return 2;
    }

    /**
     * Description of the Method
     *
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa0_1() {
        return org.acm.seguin.parser.JavaParserTokenManager.jjMoveNfa_1(0, 0);
    }

    /**
     * Description of the Method
     *
     * @param state
     * 		Description of Parameter
     */
    private static final void jjCheckNAdd(int state) {
        if (org.acm.seguin.parser.JavaParserTokenManager.jjrounds[state] != org.acm.seguin.parser.JavaParserTokenManager.jjround) {
            org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = state;
            org.acm.seguin.parser.JavaParserTokenManager.jjrounds[state] = org.acm.seguin.parser.JavaParserTokenManager.jjround;
        }
    }

    /**
     * Description of the Method
     *
     * @param start
     * 		Description of Parameter
     * @param end
     * 		Description of Parameter
     */
    private static final void jjAddStates(int start, int end) {
        do {
            org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = org.acm.seguin.parser.JavaParserTokenManager.jjnextStates[start];
        } while ((start++) != end );
    }

    /**
     * Description of the Method
     *
     * @param state1
     * 		Description of Parameter
     * @param state2
     * 		Description of Parameter
     */
    private static final void jjCheckNAddTwoStates(int state1, int state2) {
        org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(state1);
        org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(state2);
    }

    /**
     * Description of the Method
     *
     * @param start
     * 		Description of Parameter
     * @param end
     * 		Description of Parameter
     */
    private static final void jjCheckNAddStates(int start, int end) {
        do {
            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(org.acm.seguin.parser.JavaParserTokenManager.jjnextStates[start]);
        } while ((start++) != end );
    }

    /**
     * Description of the Method
     *
     * @param start
     * 		Description of Parameter
     */
    private static final void jjCheckNAddStates(int start) {
        org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(org.acm.seguin.parser.JavaParserTokenManager.jjnextStates[start]);
        org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(org.acm.seguin.parser.JavaParserTokenManager.jjnextStates[start + 1]);
    }

    /**
     * Description of the Method
     *
     * @param startState
     * 		Description of Parameter
     * @param curPos
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveNfa_1(int startState, int curPos) {
        int[] nextStates;
        int startsAt = 0;
        org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt = 3;
        int i = 1;
        org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[0] = startState;
        int j;
        int kind = 0x7fffffff;
        for (; ;) {
            if ((++org.acm.seguin.parser.JavaParserTokenManager.jjround) == 0x7fffffff) {
                org.acm.seguin.parser.JavaParserTokenManager.ReInitRounds();
            }
            if (org.acm.seguin.parser.JavaParserTokenManager.curChar < 64) {
                long l = 1L << org.acm.seguin.parser.JavaParserTokenManager.curChar;
                MatchLoop : do {
                    switch (org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[--i]) {
                        case 0 :
                            if ((0x2400L & l) != 0L) {
                                if (kind > 11) {
                                    kind = 11;
                                }
                            }
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 13) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 1;
                            }
                            break;
                        case 1 :
                            if ((org.acm.seguin.parser.JavaParserTokenManager.curChar == 10) && (kind > 11)) {
                                kind = 11;
                            }
                            break;
                        case 2 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 13) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 1;
                            }
                            break;
                        default :
                            break;
                    }
                } while (i != startsAt );
            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar < 128) {
                long l = 1L << (org.acm.seguin.parser.JavaParserTokenManager.curChar & 077);
                MatchLoop : do {
                    switch (org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[--i]) {
                        default :
                            break;
                    }
                } while (i != startsAt );
            } else {
                int i2 = (org.acm.seguin.parser.JavaParserTokenManager.curChar & 0xff) >> 6;
                long l2 = 1L << (org.acm.seguin.parser.JavaParserTokenManager.curChar & 077);
                MatchLoop : do {
                    switch (org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[--i]) {
                        default :
                            break;
                    }
                } while (i != startsAt );
            }
            if (kind != 0x7fffffff) {
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = kind;
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt) == (startsAt = 3 - (org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt = startsAt))) {
                return curPos;
            }
            try {
                org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    /**
     * Description of the Method
     *
     * @param pos
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjStopStringLiteralDfa_0(int pos, long active0, long active1) {
        switch (pos) {
            case 0 :
                if (((active0 & 0xffffffffffff0000L) != 0L) || ((active1 & 0x7L) != 0L)) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    return 44;
                }
                if (((active0 & 0x680L) != 0L) || ((active1 & 0x10020000000000L) != 0L)) {
                    return 2;
                }
                if ((active1 & 0x400000L) != 0L) {
                    return 8;
                }
                return -1;
            case 1 :
                if ((active0 & 0x600L) != 0L) {
                    return 0;
                }
                if ((active0 & 0x2018000000L) != 0L) {
                    return 44;
                }
                if (((active0 & 0xffffffdfe7ff0000L) != 0L) || ((active1 & 0x7L) != 0L)) {
                    if (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos != 1) {
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 1;
                    }
                    return 44;
                }
                return -1;
            case 2 :
                if ((active0 & 0x8000260800000000L) != 0L) {
                    return 44;
                }
                if (((active0 & 0x7fffd9d7f7ff0000L) != 0L) || ((active1 & 0x7L) != 0L)) {
                    if (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos != 2) {
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 2;
                    }
                    return 44;
                }
                return -1;
            case 3 :
                if (((active0 & 0x4400481020580000L) != 0L) || ((active1 & 0x1L) != 0L)) {
                    return 44;
                }
                if (((active0 & 0x3bff95c7d7a70000L) != 0L) || ((active1 & 0x6L) != 0L)) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 3;
                    return 44;
                }
                return -1;
            case 4 :
                if (((active0 & 0x236f95c056030000L) != 0L) || ((active1 & 0x2L) != 0L)) {
                    if (org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos != 4) {
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 4;
                    }
                    return 44;
                }
                if (((active0 & 0x1890000781a40000L) != 0L) || ((active1 & 0x4L) != 0L)) {
                    return 44;
                }
                return -1;
            case 5 :
                if ((active0 & 0x112c108010000000L) != 0L) {
                    return 44;
                }
                if (((active0 & 0x2243854246030000L) != 0L) || ((active1 & 0x2L) != 0L)) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 5;
                    return 44;
                }
                return -1;
            case 6 :
                if ((active0 & 0x1800244020000L) != 0L) {
                    return 44;
                }
                if (((active0 & 0x2242054002010000L) != 0L) || ((active1 & 0x2L) != 0L)) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 6;
                    return 44;
                }
                return -1;
            case 7 :
                if (((active0 & 0x40000002010000L) != 0L) || ((active1 & 0x2L) != 0L)) {
                    return 44;
                }
                if ((active0 & 0x2202054000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 7;
                    return 44;
                }
                return -1;
            case 8 :
                if ((active0 & 0x200014000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 8;
                    return 44;
                }
                if ((active0 & 0x2002040000000000L) != 0L) {
                    return 44;
                }
                return -1;
            case 9 :
                if ((active0 & 0x14000000000L) != 0L) {
                    return 44;
                }
                if ((active0 & 0x200000000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 9;
                    return 44;
                }
                return -1;
            case 10 :
                if ((active0 & 0x200000000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 75;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 10;
                    return 44;
                }
                return -1;
            default :
                return -1;
        }
    }

    /**
     * Description of the Method
     *
     * @param pos
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjStartNfa_0(int pos, long active0, long active1) {
        return org.acm.seguin.parser.JavaParserTokenManager.jjMoveNfa_0(org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
    }

    /**
     * Description of the Method
     *
     * @param pos
     * 		Description of Parameter
     * @param kind
     * 		Description of Parameter
     * @param state
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjStartNfaWithStates_0(int pos, int kind, int state) {
        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = kind;
        org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = pos;
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            return pos + 1;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjMoveNfa_0(state, pos + 1);
    }

    /**
     * Description of the Method
     *
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa0_0() {
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 10 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 4);
            case 13 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 5;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
            case 33 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 90;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x200000000L);
            case 37 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 109;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x100000000000000L);
            case 38 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 106;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x20000800000000L);
            case 40 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 78);
            case 41 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 79);
            case 42 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 104;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x8000000000000L);
            case 43 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 102;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x2001000000000L);
            case 44 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 85);
            case 45 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 103;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x4002000000000L);
            case 46 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(0, 86, 8);
            case 47 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 105;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x680L, 0x10000000000000L);
            case 58 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 93);
            case 59 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 84);
            case 60 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 89;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x200400080000000L);
            case 61 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 87;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x40000000L);
            case 62 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 88;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0xc01800100000000L);
            case 63 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 92);
            case 91 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 82);
            case 93 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 83);
            case 94 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 108;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x80000000000000L);
            case 97 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);
            case 98 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0xe0000L, 0x0L);
            case 99 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x3f00000L, 0x0L);
            case 100 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x1c000000L, 0x0L);
            case 101 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x60000000L, 0x0L);
            case 102 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0xf80000000L, 0x0L);
            case 103 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x1000000000L, 0x0L);
            case 105 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x7e000000000L, 0x0L);
            case 108 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
            case 110 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x700000000000L, 0x0L);
            case 112 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x7800000000000L, 0x0L);
            case 114 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);
            case 115 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x3f0000000000000L, 0x0L);
            case 116 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0xfc00000000000000L, 0x0L);
            case 118 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x3L);
            case 119 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x4L);
            case 123 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 80);
            case 124 :
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 107;
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa1_0(0x0L, 0x40000400000000L);
            case 125 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 81);
            case 126 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(0, 91);
            default :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveNfa_0(3, 0);
        }
    }

    /**
     * Description of the Method
     *
     * @param active0
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa1_0(long active0, long active1) {
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(0, active0, active1);
            return 1;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 10 :
                if ((active0 & 0x40L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 6);
                }
                break;
            case 38 :
                if ((active1 & 0x800000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 99);
                }
                break;
            case 42 :
                if ((active0 & 0x200L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 9;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 1;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x400L, active1, 0L);
            case 43 :
                if ((active1 & 0x1000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 100);
                }
                break;
            case 45 :
                if ((active1 & 0x2000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 101);
                }
                break;
            case 47 :
                if ((active0 & 0x80L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 7);
                }
                break;
            case 60 :
                if ((active1 & 0x400000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 110;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 1;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000000000000L);
            case 61 :
                if ((active1 & 0x40000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 94);
                } else if ((active1 & 0x80000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 95);
                } else if ((active1 & 0x100000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 96);
                } else if ((active1 & 0x200000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 97);
                } else if ((active1 & 0x2000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 113);
                } else if ((active1 & 0x4000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 114);
                } else if ((active1 & 0x8000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 115);
                } else if ((active1 & 0x10000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 116);
                } else if ((active1 & 0x20000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 117);
                } else if ((active1 & 0x40000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 118);
                } else if ((active1 & 0x80000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 119);
                } else if ((active1 & 0x100000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 120);
                }
                break;
            case 62 :
                if ((active1 & 0x800000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 111;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 1;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0xc01000000000000L);
            case 97 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x900080300000L, active1, 0L);
            case 98 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x10000L, active1, 0L);
            case 101 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x8200004000000L, active1, 0L);
            case 102 :
                if ((active0 & 0x2000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(1, 37, 44);
                }
                break;
            case 104 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x1c10000000400000L, active1, 0x4L);
            case 105 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x300000000L, active1, 0L);
            case 108 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x420800000L, active1, 0L);
            case 109 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0xc000000000L, active1, 0L);
            case 110 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x70000000000L, active1, 0L);
            case 111 :
                if ((active0 & 0x8000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 27;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 1;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x81813020000L, active1, 0x3L);
            case 114 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0xe003000000040000L, active1, 0L);
            case 116 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x60000000000000L, active1, 0L);
            case 117 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x84400000000000L, active1, 0L);
            case 119 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x100000000000000L, active1, 0L);
            case 120 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x40000000L, active1, 0L);
            case 121 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa2_0(active0, 0x200000000080000L, active1, 0L);
            case 124 :
                if ((active1 & 0x400000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(1, 98);
                }
                break;
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(0, active0, active1);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param old1
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1) {
        if (((active0 &= old0) | (active1 &= old1)) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(0, old0, old1);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(1, active0, active1);
            return 2;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 60 :
                if ((active0 & 0x400L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(2, 10);
                }
                break;
            case 61 :
                if ((active1 & 0x200000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(2, 121);
                } else if ((active1 & 0x400000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(2, 122);
                }
                break;
            case 62 :
                if ((active1 & 0x1000000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 112;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 2;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800000000000000L);
            case 97 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x2020000000c00000L, active1, 0L);
            case 98 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0L);
            case 99 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x800000000000L, active1, 0L);
            case 101 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x40000L, active1, 0L);
            case 102 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x4000000L, active1, 0L);
            case 105 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x501000000000000L, active1, 0x5L);
            case 108 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x400080000000L, active1, 0x2L);
            case 110 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x200080303000000L, active1, 0L);
            case 111 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x12000400020000L, active1, 0L);
            case 112 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x8000c000000000L, active1, 0L);
            case 114 :
                if ((active0 & 0x800000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(2, 35, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x1840000000000000L, active1, 0L);
            case 115 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x10020110000L, active1, 0L);
            case 116 :
                if ((active0 & 0x20000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 41;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 2;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x8141040280000L, active1, 0L);
            case 117 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa3_0(active0, 0x4000000010000000L, active1, 0L);
            case 119 :
                if ((active0 & 0x200000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(2, 45, 44);
                }
                break;
            case 121 :
                if ((active0 & 0x8000000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(2, 63, 44);
                }
                break;
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(1, active0, active1);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param old1
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1) {
        if (((active0 &= old0) | (active1 &= old1)) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(1, old0, old1);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(2, active0, active1);
            return 3;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 61 :
                if ((active1 & 0x800000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStopAtPos(3, 123);
                }
                break;
            case 97 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x704040000L, active1, 0x2L);
            case 98 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x10000000L, active1, 0L);
            case 99 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x200000000200000L, active1, 0L);
            case 100 :
                if ((active1 & 0x1L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 64, 44);
                }
                break;
            case 101 :
                if ((active0 & 0x80000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 19, 44);
                } else if ((active0 & 0x100000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 20, 44);
                } else if ((active0 & 0x20000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 29, 44);
                } else if ((active0 & 0x4000000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 62, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x80040040000000L, active1, 0L);
            case 103 :
                if ((active0 & 0x80000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 43, 44);
                }
                break;
            case 105 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x40100000000000L, active1, 0L);
            case 107 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x800000000000L, active1, 0L);
            case 108 :
                if ((active0 & 0x400000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 46, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x4004000020000L, active1, 0x4L);
            case 110 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L, active1, 0L);
            case 111 :
                if ((active0 & 0x1000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 36, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x1800008000000000L, active1, 0L);
            case 114 :
                if ((active0 & 0x400000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 22, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x10000000000000L, active1, 0L);
            case 115 :
                if ((active0 & 0x400000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(3, 58, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x81800000L, active1, 0L);
            case 116 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x122010002010000L, active1, 0L);
            case 117 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x8000000000000L, active1, 0L);
            case 118 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa4_0(active0, 0x1000000000000L, active1, 0L);
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(2, active0, active1);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param old1
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1) {
        if (((active0 &= old0) | (active1 &= old1)) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(2, old0, old1);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(3, active0, active1);
            return 4;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 97 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x1810000000000L, active1, 0L);
            case 99 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x140000000000000L, active1, 0L);
            case 101 :
                if ((active0 & 0x80000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 31, 44);
                } else if ((active1 & 0x4L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 66, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x2004000020000L, active1, 0L);
            case 104 :
                if ((active0 & 0x200000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 21, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0L);
            case 105 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x24000002000000L, active1, 0L);
            case 107 :
                if ((active0 & 0x40000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 18, 44);
                }
                break;
            case 108 :
                if ((active0 & 0x100000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 32;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 4;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x210000000L, active1, 0L);
            case 110 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x40000000L, active1, 0L);
            case 114 :
                if ((active0 & 0x80000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 55, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x8048000010000L, active1, 0L);
            case 115 :
                if ((active0 & 0x800000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 23, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0L);
            case 116 :
                if ((active0 & 0x1000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 24, 44);
                } else if ((active0 & 0x400000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 34, 44);
                } else if ((active0 & 0x10000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(4, 52, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2L);
            case 117 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x4000000L, active1, 0L);
            case 118 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x100000000000L, active1, 0L);
            case 119 :
                if ((active0 & 0x800000000000000L) != 0L) {
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = 59;
                    org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = 4;
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa5_0(active0, 0x1000000000000000L, active1, 0L);
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(3, active0, active1);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param old1
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1) {
        if (((active0 &= old0) | (active1 &= old1)) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(3, old0, old1);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(4, active0, active1);
            return 5;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 97 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x30000L, active1, 0L);
            case 99 :
                if ((active0 & 0x4000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 50, 44);
                } else if ((active0 & 0x20000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 53, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L, active1, 0L);
            case 100 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x40000000L, active1, 0L);
            case 101 :
                if ((active0 & 0x10000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 28, 44);
                } else if ((active0 & 0x100000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 44, 44);
                }
                break;
            case 102 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x40000000000L, active1, 0L);
            case 103 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x800000000000L, active1, 0L);
            case 104 :
                if ((active0 & 0x100000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 56, 44);
                }
                break;
            case 105 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L, active1, 0x2L);
            case 108 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x204000000L, active1, 0L);
            case 109 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x4000000000L, active1, 0L);
            case 110 :
                if ((active0 & 0x8000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 51, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x10002000000L, active1, 0L);
            case 114 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L, active1, 0L);
            case 115 :
                if ((active0 & 0x1000000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 60, 44);
                }
                break;
            case 116 :
                if ((active0 & 0x8000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(5, 39, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa6_0(active0, 0x41000000000000L, active1, 0L);
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(4, active0, active1);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param old1
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1) {
        if (((active0 &= old0) | (active1 &= old1)) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(4, old0, old1);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(5, active0, active1);
            return 6;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 97 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0x40000000000L, active1, 0L);
            case 99 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0x10000010000L, active1, 0L);
            case 101 :
                if ((active0 & 0x800000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(6, 47, 44);
                } else if ((active0 & 0x1000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(6, 48, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0x2000004000000000L, active1, 0L);
            case 102 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L, active1, 0L);
            case 108 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x2L);
            case 110 :
                if ((active0 & 0x20000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(6, 17, 44);
                }
                break;
            case 111 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0x200000000000000L, active1, 0L);
            case 115 :
                if ((active0 & 0x40000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(6, 30, 44);
                }
                break;
            case 116 :
                if ((active0 & 0x4000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(6, 26, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0x2000000000000L, active1, 0L);
            case 117 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa7_0(active0, 0x2000000L, active1, 0L);
            case 121 :
                if ((active0 & 0x200000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(6, 33, 44);
                }
                break;
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(5, active0, active1);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param old1
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1) {
        if (((active0 &= old0) | (active1 &= old1)) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(5, old0, old1);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(6, active0, active1);
            return 7;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 99 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa8_0(active0, 0x40000000000L, active1, 0L);
            case 101 :
                if ((active0 & 0x2000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(7, 25, 44);
                } else if ((active1 & 0x2L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(7, 65, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa8_0(active0, 0x2010000000000L, active1, 0L);
            case 110 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa8_0(active0, 0x2200004000000000L, active1, 0L);
            case 112 :
                if ((active0 & 0x40000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(7, 54, 44);
                }
                break;
            case 116 :
                if ((active0 & 0x10000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(7, 16, 44);
                }
                break;
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(6, active0, active1);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @param old1
     * 		Description of Parameter
     * @param active1
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1) {
        if (((active0 &= old0) | (active1 &= old1)) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(6, old0, old1);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(7, active0, 0L);
            return 8;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 100 :
                if ((active0 & 0x2000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(8, 49, 44);
                }
                break;
            case 101 :
                if ((active0 & 0x40000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(8, 42, 44);
                }
                break;
            case 105 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa9_0(active0, 0x200000000000000L);
            case 111 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa9_0(active0, 0x10000000000L);
            case 116 :
                if ((active0 & 0x2000000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(8, 61, 44);
                }
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa9_0(active0, 0x4000000000L);
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(7, active0, 0L);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa9_0(long old0, long active0) {
        if ((active0 &= old0) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(7, old0, 0L);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(8, active0, 0L);
            return 9;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 102 :
                if ((active0 & 0x10000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(9, 40, 44);
                }
                break;
            case 115 :
                if ((active0 & 0x4000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(9, 38, 44);
                }
                break;
            case 122 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa10_0(active0, 0x200000000000000L);
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(8, active0, 0L);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa10_0(long old0, long active0) {
        if ((active0 &= old0) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(8, old0, 0L);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(9, active0, 0L);
            return 10;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 101 :
                return org.acm.seguin.parser.JavaParserTokenManager.jjMoveStringLiteralDfa11_0(active0, 0x200000000000000L);
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(9, active0, 0L);
    }

    /**
     * Description of the Method
     *
     * @param old0
     * 		Description of Parameter
     * @param active0
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveStringLiteralDfa11_0(long old0, long active0) {
        if ((active0 &= old0) == 0L) {
            return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(9, old0, 0L);
        }
        try {
            org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
        } catch (java.io.IOException e) {
            org.acm.seguin.parser.JavaParserTokenManager.jjStopStringLiteralDfa_0(10, active0, 0L);
            return 11;
        }
        switch (org.acm.seguin.parser.JavaParserTokenManager.curChar) {
            case 100 :
                if ((active0 & 0x200000000000000L) != 0L) {
                    return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfaWithStates_0(11, 57, 44);
                }
                break;
            default :
                break;
        }
        return org.acm.seguin.parser.JavaParserTokenManager.jjStartNfa_0(10, active0, 0L);
    }

    /**
     * Description of the Method
     *
     * @param startState
     * 		Description of Parameter
     * @param curPos
     * 		Description of Parameter
     * @return Description of the Returned Value
     */
    private static final int jjMoveNfa_0(int startState, int curPos) {
        int[] nextStates;
        int startsAt = 0;
        org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt = 64;
        int i = 1;
        org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[0] = startState;
        int j;
        int kind = 0x7fffffff;
        for (; ;) {
            if ((++org.acm.seguin.parser.JavaParserTokenManager.jjround) == 0x7fffffff) {
                org.acm.seguin.parser.JavaParserTokenManager.ReInitRounds();
            }
            if (org.acm.seguin.parser.JavaParserTokenManager.curChar < 64) {
                long l = 1L << org.acm.seguin.parser.JavaParserTokenManager.curChar;
                MatchLoop : do {
                    switch (org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[--i]) {
                        case 3 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(0, 6);
                            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 36) {
                                if (kind > 75) {
                                    kind = 75;
                                }
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(44);
                            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 34) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 39) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(11, 13);
                            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 46) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(8);
                            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 47) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 2;
                            }
                            if ((0x3fe000000000000L & l) != 0L) {
                                if (kind > 67) {
                                    kind = 67;
                                }
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(5, 6);
                            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 48) {
                                if (kind > 67) {
                                    kind = 67;
                                }
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(14, 16);
                            }
                            break;
                        case 0 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 42) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 1;
                            }
                            break;
                        case 1 :
                            if (((0xffff7fffffffffffL & l) != 0L) && (kind > 8)) {
                                kind = 8;
                            }
                            break;
                        case 2 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 42) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 0;
                            }
                            break;
                        case 4 :
                            if ((0x3fe000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 67) {
                                kind = 67;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(5, 6);
                            break;
                        case 5 :
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 67) {
                                kind = 67;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(5, 6);
                            break;
                        case 7 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 46) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(8);
                            }
                            break;
                        case 8 :
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 71) {
                                kind = 71;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(17, 19);
                            break;
                        case 10 :
                            if ((0x280000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(11);
                            }
                            break;
                        case 11 :
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 71) {
                                kind = 71;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(11, 12);
                            break;
                        case 13 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 39) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(11, 13);
                            }
                            break;
                        case 14 :
                            if ((0xffffff7fffffdbffL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(15);
                            }
                            break;
                        case 15 :
                            if ((org.acm.seguin.parser.JavaParserTokenManager.curChar == 39) && (kind > 73)) {
                                kind = 73;
                            }
                            break;
                        case 17 :
                            if ((0x8400000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(15);
                            }
                            break;
                        case 18 :
                            if ((0xff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(19, 15);
                            }
                            break;
                        case 19 :
                            if ((0xff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(15);
                            }
                            break;
                        case 20 :
                            if ((0xf000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 21;
                            }
                            break;
                        case 21 :
                            if ((0xff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(19);
                            }
                            break;
                        case 23 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 24;
                            }
                            break;
                        case 24 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 25;
                            }
                            break;
                        case 25 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 26;
                            }
                            break;
                        case 26 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(15);
                            }
                            break;
                        case 28 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 34) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 29 :
                            if ((0xfffffffbffffdbffL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 31 :
                            if ((0x8400000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 33 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 34;
                            }
                            break;
                        case 34 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 35;
                            }
                            break;
                        case 35 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 36;
                            }
                            break;
                        case 36 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 38 :
                            if ((org.acm.seguin.parser.JavaParserTokenManager.curChar == 34) && (kind > 74)) {
                                kind = 74;
                            }
                            break;
                        case 39 :
                            if ((0xff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(20, 24);
                            }
                            break;
                        case 40 :
                            if ((0xff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 41 :
                            if ((0xf000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 42;
                            }
                            break;
                        case 42 :
                            if ((0xff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(40);
                            }
                            break;
                        case 43 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar != 36) {
                                break;
                            }
                            if (kind > 75) {
                                kind = 75;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(44);
                            break;
                        case 44 :
                            if ((0x3ff001000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 75) {
                                kind = 75;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(44);
                            break;
                        case 45 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(0, 6);
                            }
                            break;
                        case 46 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(46, 47);
                            }
                            break;
                        case 47 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar != 46) {
                                break;
                            }
                            if (kind > 71) {
                                kind = 71;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(25, 27);
                            break;
                        case 48 :
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 71) {
                                kind = 71;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(25, 27);
                            break;
                        case 50 :
                            if ((0x280000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(51);
                            }
                            break;
                        case 51 :
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 71) {
                                kind = 71;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(51, 12);
                            break;
                        case 52 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(52, 53);
                            }
                            break;
                        case 54 :
                            if ((0x280000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(55);
                            }
                            break;
                        case 55 :
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 71) {
                                kind = 71;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(55, 12);
                            break;
                        case 56 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(28, 30);
                            }
                            break;
                        case 58 :
                            if ((0x280000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(59);
                            }
                            break;
                        case 59 :
                            if ((0x3ff000000000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(59, 12);
                            }
                            break;
                        case 60 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar != 48) {
                                break;
                            }
                            if (kind > 67) {
                                kind = 67;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(14, 16);
                            break;
                        case 62 :
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 67) {
                                kind = 67;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(62, 6);
                            break;
                        case 63 :
                            if ((0xff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 67) {
                                kind = 67;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(63, 6);
                            break;
                        default :
                            break;
                    }
                } while (i != startsAt );
            } else if (org.acm.seguin.parser.JavaParserTokenManager.curChar < 128) {
                long l = 1L << (org.acm.seguin.parser.JavaParserTokenManager.curChar & 077);
                MatchLoop : do {
                    switch (org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[--i]) {
                        case 3 :
                        case 44 :
                            if ((0x7fffffe87fffffeL & l) == 0L) {
                                break;
                            }
                            if (kind > 75) {
                                kind = 75;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(44);
                            break;
                        case 1 :
                            if (kind > 8) {
                                kind = 8;
                            }
                            break;
                        case 6 :
                            if (((0x100000001000L & l) != 0L) && (kind > 67)) {
                                kind = 67;
                            }
                            break;
                        case 9 :
                            if ((0x2000000020L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(31, 32);
                            }
                            break;
                        case 12 :
                            if (((0x5000000050L & l) != 0L) && (kind > 71)) {
                                kind = 71;
                            }
                            break;
                        case 14 :
                            if ((0xffffffffefffffffL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(15);
                            }
                            break;
                        case 16 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 92) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(33, 35);
                            }
                            break;
                        case 17 :
                            if ((0x14404410000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(15);
                            }
                            break;
                        case 22 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 117) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 23;
                            }
                            break;
                        case 23 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 24;
                            }
                            break;
                        case 24 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 25;
                            }
                            break;
                        case 25 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 26;
                            }
                            break;
                        case 26 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(15);
                            }
                            break;
                        case 27 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 92) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 22;
                            }
                            break;
                        case 29 :
                            if ((0xffffffffefffffffL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 30 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 92) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(36, 38);
                            }
                            break;
                        case 31 :
                            if ((0x14404410000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 32 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 117) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 33;
                            }
                            break;
                        case 33 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 34;
                            }
                            break;
                        case 34 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 35;
                            }
                            break;
                        case 35 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 36;
                            }
                            break;
                        case 36 :
                            if ((0x7e0000007eL & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddStates(7, 10);
                            }
                            break;
                        case 37 :
                            if (org.acm.seguin.parser.JavaParserTokenManager.curChar == 92) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 32;
                            }
                            break;
                        case 49 :
                            if ((0x2000000020L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(39, 40);
                            }
                            break;
                        case 53 :
                            if ((0x2000000020L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(41, 42);
                            }
                            break;
                        case 57 :
                            if ((0x2000000020L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(43, 44);
                            }
                            break;
                        case 61 :
                            if ((0x100000001000000L & l) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(62);
                            }
                            break;
                        case 62 :
                            if ((0x7e0000007eL & l) == 0L) {
                                break;
                            }
                            if (kind > 67) {
                                kind = 67;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAddTwoStates(62, 6);
                            break;
                        default :
                            break;
                    }
                } while (i != startsAt );
            } else {
                int i2 = (org.acm.seguin.parser.JavaParserTokenManager.curChar & 0xff) >> 6;
                long l2 = 1L << (org.acm.seguin.parser.JavaParserTokenManager.curChar & 077);
                MatchLoop : do {
                    switch (org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[--i]) {
                        case 3 :
                        case 44 :
                            if ((org.acm.seguin.parser.JavaParserTokenManager.jjbitVec3[i2] & l2) == 0L) {
                                break;
                            }
                            if (kind > 75) {
                                kind = 75;
                            }
                            org.acm.seguin.parser.JavaParserTokenManager.jjCheckNAdd(44);
                            break;
                        case 1 :
                            if (((org.acm.seguin.parser.JavaParserTokenManager.jjbitVec0[i2] & l2) != 0L) && (kind > 8)) {
                                kind = 8;
                            }
                            break;
                        case 14 :
                            if ((org.acm.seguin.parser.JavaParserTokenManager.jjbitVec0[i2] & l2) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjstateSet[org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt++] = 15;
                            }
                            break;
                        case 29 :
                            if ((org.acm.seguin.parser.JavaParserTokenManager.jjbitVec0[i2] & l2) != 0L) {
                                org.acm.seguin.parser.JavaParserTokenManager.jjAddStates(7, 10);
                            }
                            break;
                        default :
                            break;
                    }
                } while (i != startsAt );
            }
            if (kind != 0x7fffffff) {
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind = kind;
                org.acm.seguin.parser.JavaParserTokenManager.jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt) == (startsAt = 64 - (org.acm.seguin.parser.JavaParserTokenManager.jjnewStateCnt = startsAt))) {
                return curPos;
            }
            try {
                org.acm.seguin.parser.JavaParserTokenManager.curChar = org.acm.seguin.parser.JavaParserTokenManager.input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    /**
     * Description of the Method
     */
    private static final void ReInitRounds() {
        int i;
        org.acm.seguin.parser.JavaParserTokenManager.jjround = 0x80000001;
        for (i = 64; (i--) > 0;) {
            org.acm.seguin.parser.JavaParserTokenManager.jjrounds[i] = 0x80000000;
        }
    }

    /**
     * Description of the Method
     *
     * @return Description of the Returned Value
     */
    private static final org.acm.seguin.parser.Token jjFillToken() {
        org.acm.seguin.parser.Token t = org.acm.seguin.parser.Token.newToken(org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind);
        t.kind = org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind;
        java.lang.String im = org.acm.seguin.parser.JavaParserTokenManager.jjstrLiteralImages[org.acm.seguin.parser.JavaParserTokenManager.jjmatchedKind];
        t.image = (im == null) ? org.acm.seguin.parser.JavaParserTokenManager.input_stream.GetImage() : im;
        t.beginLine = org.acm.seguin.parser.JavaParserTokenManager.input_stream.getBeginLine();
        t.beginColumn = org.acm.seguin.parser.JavaParserTokenManager.input_stream.getBeginColumn();
        t.endLine = org.acm.seguin.parser.JavaParserTokenManager.input_stream.getEndLine();
        t.endColumn = org.acm.seguin.parser.JavaParserTokenManager.input_stream.getEndColumn();
        return t;
    }
}